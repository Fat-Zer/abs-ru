# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-06 22:38+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/ex43.sh:3
msgid "#!/bin/bash # Exercising \"eval\" ..."
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:8
#, no-wrap
msgid ""
"y=`eval ls -l`  #  Similar to y=`ls -l`\n"
"echo $y         #+ but linefeeds removed because \"echoed\" variable is "
"unquoted.\n"
"echo\n"
"echo \"$y\"       #  Linefeeds preserved when variable is quoted.\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:10
msgid "echo; echo"
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:13
#, no-wrap
msgid ""
"y=`eval df`     #  Similar to y=`df`\n"
"echo $y         #+ but linefeeds removed.\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:16
msgid ""
"# When LF's not preserved, it may make it easier to parse output, #+ using "
"utilities such as \"awk\"."
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:20 abs-guide/ex43.sh:29
msgid ""
"echo echo \"===========================================================\" "
"echo"
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:25
msgid ""
"eval \"`seq 3 | sed -e 's/.*/echo var&amp;=ABCDEFGHIJ/'`\" # var1=ABCDEFGHIJ "
"# var2=ABCDEFGHIJ # var3=ABCDEFGHIJ"
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:33
msgid ""
"# Now, showing how to do something useful with \"eval\" . . .  # (Thank you, "
"E. Choroba!)"
msgstr ""

#. type: Plain text
#: abs-guide/ex43.sh:40
#, no-wrap
msgid ""
"version=3.4     #  Can we split the version into major and minor\n"
"                #+ part in one command?\n"
"echo \"version = $version\"\n"
"eval major=${version/./;minor=}     #  Replaces '.' in version by "
"';minor='\n"
"                                    #  The substitution yields '3; "
"minor=4'\n"
"                                    #+ so eval does minor=4, major=3\n"
"echo Major: $major, minor: $minor   #  Major: 3, minor: 4\n"
msgstr ""
