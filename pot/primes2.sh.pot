# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-07 18:29+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/primes2.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# primes2.sh\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:6
#, no-wrap
msgid ""
"#  Generating prime numbers the quick-and-easy way,\n"
"#+ without resorting to fancy algorithms.\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:10
#, no-wrap
msgid ""
"CEILING=10000   # 1 to 10000\n"
"PRIME=0\n"
"E_NOTPRIME=\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:15
#, no-wrap
msgid ""
"is_prime ()\n"
"{\n"
"  local factors\n"
"  factors=( $(factor $1) )  # Load output of `factor` into array.\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:27
#, no-wrap
msgid ""
"if [ -z \"${factors[2]}\" ]\n"
"#  Third element of \"factors\" array:\n"
"#+ ${factors[2]} is 2nd factor of argument.\n"
"#  If it is blank, then there is no 2nd factor,\n"
"#+ and the argument is therefore prime.\n"
"then\n"
"  return $PRIME             # 0\n"
"else\n"
"  return $E_NOTPRIME        # null\n"
"fi\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:36
#, no-wrap
msgid ""
"echo\n"
"for n in $(seq $CEILING)\n"
"do\n"
"  if is_prime $n\n"
"  then\n"
"    printf %5d $n\n"
"  fi   #    ^  Five positions per number suffices.\n"
"done   #       For a higher $CEILING, adjust upward, as necessary.\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:38
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/primes2.sh:39
#, no-wrap
msgid "exit\n"
msgstr ""
