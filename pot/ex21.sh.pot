# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/ex21.sh:2
#, no-wrap
msgid "#!/bin/bash\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:5
#, no-wrap
msgid ""
"# $RANDOM returns a different random integer at each invocation.\n"
"# Nominal range: 0 - 32767 (signed 16-bit integer).\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:8
#, no-wrap
msgid ""
"MAXCOUNT=10\n"
"count=1\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:19
#, no-wrap
msgid ""
"echo\n"
"echo \"$MAXCOUNT random numbers:\"\n"
"echo \"-----------------\"\n"
"while [ \"$count\" -le $MAXCOUNT ]      # Generate 10 ($MAXCOUNT) random "
"integers.\n"
"do\n"
"  number=$RANDOM\n"
"  echo $number\n"
"  let \"count += 1\"  # Increment count.\n"
"done\n"
"echo \"-----------------\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:22
#, no-wrap
msgid ""
"# If you need a random int within a certain range, use the 'modulo' "
"operator.\n"
"# This returns the remainder of a division operation.\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:24
#, no-wrap
msgid "RANGE=500\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:26 abs-guide/ex21.sh:33 abs-guide/ex21.sh:84
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:31
#, no-wrap
msgid ""
"number=$RANDOM\n"
"let \"number %= $RANGE\"\n"
"#           ^^\n"
"echo \"Random number less than $RANGE  ---  $number\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:38
#, no-wrap
msgid ""
"#  If you need a random integer greater than a lower bound,\n"
"#+ then set up a test to discard all numbers below that.\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:40
#, no-wrap
msgid "FLOOR=200\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:48
#, no-wrap
msgid ""
"number=0   #initialize\n"
"while [ \"$number\" -le $FLOOR ]\n"
"do\n"
"  number=$RANDOM\n"
"done\n"
"echo \"Random number greater than $FLOOR ---  $number\"\n"
"echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:53
#, no-wrap
msgid ""
"   # Let's examine a simple alternative to the above loop, namely\n"
"   #       let \"number = $RANDOM + $FLOOR\"\n"
"   # That would eliminate the while-loop and run faster.\n"
"   # But, there might be a problem with that. What is it?\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:65
#, no-wrap
msgid ""
"# Combine above two techniques to retrieve random number between two "
"limits.\n"
"number=0   #initialize\n"
"while [ \"$number\" -le $FLOOR ]\n"
"do\n"
"  number=$RANDOM\n"
"  let \"number %= $RANGE\"  # Scales $number down within $RANGE.\n"
"done\n"
"echo \"Random number between $FLOOR and $RANGE ---  $number\"\n"
"echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:72
#, no-wrap
msgid ""
"# Generate binary choice, that is, \"true\" or \"false\" value.\n"
"BINARY=2\n"
"T=1\n"
"number=$RANDOM\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:82
#, no-wrap
msgid ""
"let \"number %= $BINARY\"\n"
"#  Note that    let \"number >>= 14\"    gives a better random "
"distribution\n"
"#+ (right shifts out everything except last binary digit).\n"
"if [ \"$number\" -eq $T ]\n"
"then\n"
"  echo \"TRUE\"\n"
"else\n"
"  echo \"FALSE\"\n"
"fi  \n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:93
#, no-wrap
msgid ""
"# Generate a toss of the dice.\n"
"SPOTS=6   # Modulo 6 gives range 0 - 5.\n"
"          # Incrementing by 1 gives desired range of 1 - 6.\n"
"          # Thanks, Paulo Marcel Coelho Aragao, for the simplification.\n"
"die1=0\n"
"die2=0\n"
"# Would it be better to just set SPOTS=7 and not add 1? Why or why not?\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:95
#, no-wrap
msgid "# Tosses each die separately, and so gives correct odds.\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:100
#, no-wrap
msgid ""
"    let \"die1 = $RANDOM % $SPOTS +1\" # Roll first one.\n"
"    let \"die2 = $RANDOM % $SPOTS +1\" # Roll second one.\n"
"    #  Which arithmetic operation, above, has greater precedence --\n"
"    #+ modulo (%) or addition (+)?\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:105
#, no-wrap
msgid ""
"let \"throw = $die1 + $die2\"\n"
"echo \"Throw of the dice = $throw\"\n"
"echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex21.sh:107
#, no-wrap
msgid "exit 0\n"
msgstr ""
