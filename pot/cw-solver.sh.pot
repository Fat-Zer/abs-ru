# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-06 22:38+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/cw-solver.sh:4
msgid ""
"#!/bin/bash # cw-solver.sh # This is actually a wrapper around a one-liner "
"(line 46)."
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:13
#, no-wrap
msgid ""
"#  Crossword puzzle and anagramming word game solver.\n"
"#  You know *some* of the letters in the word you're looking for,\n"
"#+ so you need a list of all valid words\n"
"#+ with the known letters in given positions.\n"
"#  For example: w...i....n\n"
"#               1???5????10\n"
"# w in position 1, 3 unknowns, i in the 5th, 4 unknowns, n at the end.\n"
"# (See comments at end of script.)\n"
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:24
#, no-wrap
msgid ""
"E_NOPATT=71\n"
"DICT=/usr/share/dict/word.lst\n"
"#                    ^^^^^^^^   Looks for word list here.\n"
"#  ASCII word list, one word per line.\n"
"#  If you happen to need an appropriate list,\n"
"#+ download the author's \"yawl\" word list package.\n"
"#  http://ibiblio.org/pub/Linux/libs/yawl-0.3.2.tar.gz\n"
"#  or\n"
"#  http://bash.deta.in/yawl-0.3.2.tar.gz\n"
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:42
#, no-wrap
msgid ""
"if [ -z \"$1\" ]   #  If no word pattern specified\n"
"then             #+ as a command-line argument . . .\n"
"  echo           #+ . . . then . . .\n"
"  echo \"Usage:\"  #+ Usage message.\n"
"  echo\n"
"  echo \"\"$0\" \\\"pattern,\\\"\"\n"
"  echo \"where \\\"pattern\\\" is in the form\"\n"
"  echo \"xxx..x.x...\"\n"
"  echo\n"
"  echo \"The x's represent known letters,\"\n"
"  echo \"and the periods are unknown letters (blanks).\"\n"
"  echo \"Letters and periods can be in any position.\"\n"
"  echo \"For example, try:   sh cw-solver.sh w...i....n\"\n"
"  echo\n"
"  exit $E_NOPATT\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:50
#, no-wrap
msgid ""
"echo\n"
"# ===============================================\n"
"# This is where all the work gets done.\n"
"grep ^\"$1\"$ \"$DICT\"   # Yes, only one line!\n"
"#    |    |\n"
"# ^ is start-of-word regex anchor.\n"
"# $ is end-of-word regex anchor.\n"
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:56
msgid ""
"# From _Stupid Grep Tricks_, vol. 1, #+ a book the ABS Guide author may yet "
"get around #+ to writing . . . one of these days . . .  # "
"=============================================== echo"
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:61
msgid ""
"exit $? # Script terminates here.  # If there are too many words generated, "
"#+ redirect the output to a file."
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:63
msgid "$ sh cw-solver.sh w...i....n"
msgstr ""

#. type: Plain text
#: abs-guide/cw-solver.sh:66
msgid "wellington workingman workingmen"
msgstr ""
