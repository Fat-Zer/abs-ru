# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/array-append.bash:3
#, no-wrap
msgid ""
"#! /bin/bash\n"
"# array-append.bash\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:9
#, no-wrap
msgid ""
"# Copyright (c) Michael S. Zick, 2003, All rights reserved.\n"
"# License: Unrestricted reuse in any form, for any purpose.\n"
"# Version: $ID$\n"
"#\n"
"# Slightly modified in formatting by M.C.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:13
#, no-wrap
msgid ""
"# Array operations are Bash-specific.\n"
"# Legacy UNIX /bin/sh lacks equivalents.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:18
#, no-wrap
msgid ""
"#  Pipe the output of this script to 'more'\n"
"#+ so it doesn't scroll off the terminal.\n"
"#  Or, redirect output to a file.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:24
#, no-wrap
msgid ""
"declare -a array1=( zero1 one1 two1 )\n"
"# Subscript packed.\n"
"declare -a array2=( [0]=zero2 [2]=two2 [3]=three2 )\n"
"# Subscript sparse -- [1] is not defined.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:33
#, no-wrap
msgid ""
"echo\n"
"echo '- Confirm that the array is really subscript sparse. -'\n"
"echo \"Number of elements: 4\"        # Hard-coded for illustration.\n"
"for (( i = 0 ; i &lt; 4 ; i++ ))\n"
"do\n"
"    echo \"Element [$i]: ${array2[$i]}\"\n"
"done\n"
"# See also the more general code example in basics-reviewed.bash.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:36
#, no-wrap
msgid "declare -a dest\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:42
#, no-wrap
msgid ""
"# Combine (append) two arrays into a third array.\n"
"echo\n"
"echo 'Conditions: Unquoted, default IFS, All-Elements-Of operator'\n"
"echo '- Undefined elements not present, subscripts not maintained. -'\n"
"# # The undefined elements do not exist; they are not being dropped.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:45
#, no-wrap
msgid ""
"dest=( ${array1[@]} ${array2[@]} )\n"
"# dest=${array1[@]}${array2[@]}     # Strange results, possibly a bug.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:50
#, no-wrap
msgid ""
"# Now, list the result.\n"
"echo\n"
"echo '- - Testing Array Append - -'\n"
"cnt=${#dest[@]}\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:56 abs-guide/array-append.bash:71
#, no-wrap
msgid ""
"echo \"Number of elements: $cnt\"\n"
"for (( i = 0 ; i &lt; cnt ; i++ ))\n"
"do\n"
"    echo \"Element [$i]: ${dest[$i]}\"\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:60
#, no-wrap
msgid ""
"# Assign an array to a single array element (twice).\n"
"dest[0]=${array1[@]}\n"
"dest[1]=${array2[@]}\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:65
#, no-wrap
msgid ""
"# List the result.\n"
"echo\n"
"echo '- - Testing modified array - -'\n"
"cnt=${#dest[@]}\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:75
#, no-wrap
msgid ""
"# Examine the modified second element.\n"
"echo\n"
"echo '- - Reassign and list second element - -'\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:78
#, no-wrap
msgid ""
"declare -a subArray=${dest[1]}\n"
"cnt=${#subArray[@]}\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:84
#, no-wrap
msgid ""
"echo \"Number of elements: $cnt\"\n"
"for (( i = 0 ; i &lt; cnt ; i++ ))\n"
"do\n"
"    echo \"Element [$i]: ${subArray[$i]}\"\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:89
#, no-wrap
msgid ""
"#  The assignment of an entire array to a single element\n"
"#+ of another array using the '=${ ... }' array assignment\n"
"#+ has converted the array being assigned into a string,\n"
"#+ with the elements separated by a space (the first character of IFS).\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:93
#, no-wrap
msgid ""
"# If the original elements didn't contain whitespace . . .\n"
"# If the original array isn't subscript sparse . . .\n"
"# Then we could get the original array structure back again.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:97
#, no-wrap
msgid ""
"# Restore from the modified second element.\n"
"echo\n"
"echo '- - Listing restored element - -'\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:100
#, no-wrap
msgid ""
"declare -a subArray=( ${dest[1]} )\n"
"cnt=${#subArray[@]}\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:109
#, no-wrap
msgid ""
"echo \"Number of elements: $cnt\"\n"
"for (( i = 0 ; i &lt; cnt ; i++ ))\n"
"do\n"
"    echo \"Element [$i]: ${subArray[$i]}\"\n"
"done\n"
"echo '- - Do not depend on this behavior. - -'\n"
"echo '- - This behavior is subject to change - -'\n"
"echo '- - in versions of Bash newer than version 2.05b - -'\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:111
#, no-wrap
msgid "# MSZ: Sorry about any earlier confusion folks.\n"
msgstr ""

#. type: Plain text
#: abs-guide/array-append.bash:112
#, no-wrap
msgid "exit 0\n"
msgstr ""
