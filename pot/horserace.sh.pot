# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-06 22:38+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/horserace.sh:5
msgid ""
"#!/bin/bash # horserace.sh: Very simple horserace simulation.  # Author: "
"Stefano Palmeri # Used with permission."
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:30
#, no-wrap
msgid ""
"################################################################\n"
"#  Goals of the script:\n"
"#  playing with escape sequences and terminal colors.\n"
"#\n"
"#  Exercise:\n"
"#  Edit the script to make it run less randomly,\n"
"#+ set up a fake betting shop . . .     \n"
"#  Um . . . um . . . it's starting to remind me of a movie . . .\n"
"#\n"
"#  The script gives each horse a random handicap.\n"
"#  The odds are calculated upon horse handicap\n"
"#+ and are expressed in European(?) style.\n"
"#  E.g., odds=3.75 means that if you bet $1 and win,\n"
"#+ you receive $3.75.\n"
"# \n"
"#  The script has been tested with a GNU/Linux OS,\n"
"#+ using xterm and rxvt, and konsole.\n"
"#  On a machine with an AMD 900 MHz processor,\n"
"#+ the average race time is 75 seconds.    \n"
"#  On faster computers the race time would be lower.\n"
"#  So, if you want more suspense, reset the USLEEP_ARG variable.\n"
"#\n"
"#  Script by Stefano Palmeri.\n"
"################################################################\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:32
msgid "E_RUNERR=65"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:44
#, no-wrap
msgid ""
"# Check if md5sum and bc are installed. \n"
"if ! which bc &amp;> /dev/null; then\n"
"   echo bc is not installed.  \n"
"   echo \"Can\\'t run . . . \"\n"
"   exit $E_RUNERR\n"
"fi\n"
"if ! which md5sum &amp;> /dev/null; then\n"
"   echo md5sum is not installed.  \n"
"   echo \"Can\\'t run . . . \"\n"
"   exit $E_RUNERR\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:49
msgid ""
"# Set the following variable to slow down script execution.  # It will be "
"passed as the argument for usleep (man usleep)  #+ and is expressed in "
"microseconds (500000 = half a second).  USLEEP_ARG=0"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:55
msgid ""
"# Clean up the temp directory, restore terminal cursor and #+ terminal "
"colors -- if script interrupted by Ctl-C.  trap 'echo -en \"\\E[?25h\"; echo "
"-en \"\\E[0m\"; stty echo;\\ tput cup 20 0; rm -fr $HORSE_RACE_TMP_DIR' TERM "
"EXIT # See the chapter on debugging for an explanation of 'trap.'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:59
msgid ""
"# Set a unique (paranoid) name for the temp directory the script needs.  "
"HORSE_RACE_TMP_DIR=$HOME/.horserace-`date +%s`-`head -c10 /dev/urandom \\ | "
"md5sum | head -c30`"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:63
msgid ""
"# Create the temp directory and move right in.  mkdir $HORSE_RACE_TMP_DIR cd "
"$HORSE_RACE_TMP_DIR"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:73
#, no-wrap
msgid ""
"#  This function moves the cursor to line $1 column $2 and then prints $3.\n"
"#  E.g.: \"move_and_echo 5 10 linux\" is equivalent to\n"
"#+ \"tput cup 4 9; echo linux\", but with one command instead of two.\n"
"#  Note: \"tput cup\" defines 0 0 the upper left angle of the terminal,\n"
"#+ echo defines 1 1 the upper left angle of the terminal.\n"
"move_and_echo() {\n"
"          echo -ne \"\\E[${1};${2}H\"\"$3\" \n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:79
#, no-wrap
msgid ""
"# Function to generate a pseudo-random number between 1 and 9. \n"
"random_1_9 ()\n"
"{\n"
"    head -c10 /dev/urandom | md5sum | tr -d [a-z] | tr -d 0 | cut -c1 \n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:87
#, no-wrap
msgid ""
"#  Two functions that simulate \"movement,\" when drawing the horses. \n"
"draw_horse_one() {\n"
"               echo -n \" \"//$MOVE_HORSE//\n"
"}\n"
"draw_horse_two(){\n"
"              echo -n \" \"\\\\\\\\$MOVE_HORSE\\\\\\\\ \n"
"}   \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:92
msgid ""
"# Define current terminal dimension.  N_COLS=`tput cols` N_LINES=`tput "
"lines`"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:99
#, no-wrap
msgid ""
"# Need at least a 20-LINES X 80-COLUMNS terminal. Check it.\n"
"if [ $N_COLS -lt 80 ] || [ $N_LINES -lt 20 ]; then\n"
"   echo \"`basename $0` needs a 80-cols X 20-lines terminal.\"\n"
"   echo \"Your terminal is ${N_COLS}-cols X ${N_LINES}-lines.\"\n"
"   exit $E_RUNERR\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:102
msgid "# Start drawing the race field."
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:105
msgid ""
"# Need a string of 80 chars. See below.  BLANK80=`seq -s \"\" 100 | head "
"-c80`"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:107
msgid "clear"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:110 abs-guide/horserace.sh:172
msgid "# Set foreground and background colors to white.  echo -ne '\\E[37;47m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:113
msgid "# Move the cursor on the upper left angle of the terminal.  tput cup 0 0"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:118
#, no-wrap
msgid ""
"# Draw six white lines.\n"
"for n in `seq 5`; do\n"
"      echo $BLANK80   # Use the 80 chars string to colorize the terminal.\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:121
msgid "# Sets foreground color to black.  echo -ne '\\E[30m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:132
#, no-wrap
msgid ""
"move_and_echo 3 1 \"START  1\"            \n"
"move_and_echo 3 75 FINISH\n"
"move_and_echo 1 5 \"|\"\n"
"move_and_echo 1 80 \"|\"\n"
"move_and_echo 2 5 \"|\"\n"
"move_and_echo 2 80 \"|\"\n"
"move_and_echo 4 5 \"|  2\"\n"
"move_and_echo 4 80 \"|\"\n"
"move_and_echo 5 5 \"V  3\"\n"
"move_and_echo 5 80 \"V\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:135
msgid "# Set foreground color to red.  echo -ne '\\E[31m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:147
msgid ""
"# Some ASCII art.  move_and_echo 1 8 \"..@@@..@@@@@...@@@@@.@...@..@@@@...\" "
"move_and_echo 2 8 \".@...@...@.......@...@...@.@.......\" move_and_echo 3 8 "
"\".@@@@@...@.......@...@@@@@.@@@@....\" move_and_echo 4 8 "
"\".@...@...@.......@...@...@.@.......\" move_and_echo 5 8 "
"\".@...@...@.......@...@...@..@@@@...\" move_and_echo 1 43 "
"\"@@@@...@@@...@@@@..@@@@..@@@@.\" move_and_echo 2 43 "
"\"@...@.@...@.@.....@.....@.....\" move_and_echo 3 43 "
"\"@@@@..@@@@@.@.....@@@@...@@@..\" move_and_echo 4 43 "
"\"@..@..@...@.@.....@.........@.\" move_and_echo 5 43 "
"\"@...@.@...@..@@@@..@@@@.@@@@..\""
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:151
msgid "# Set foreground and background colors to green.  echo -ne '\\E[32;42m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:157
#, no-wrap
msgid ""
"# Draw  eleven green lines.\n"
"tput cup 5 0\n"
"for n in `seq 11`; do\n"
"      echo $BLANK80\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:161
msgid "# Set foreground color to black.  echo -ne '\\E[30m' tput cup 5 0"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:165
msgid ""
"# Draw the fences.  echo \"++++++++++++++++++++++++++++++++++++++\\ "
"++++++++++++++++++++++++++++++++++++++++++\""
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:169
msgid ""
"tput cup 15 0 echo \"++++++++++++++++++++++++++++++++++++++\\ "
"++++++++++++++++++++++++++++++++++++++++++\""
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:177
#, no-wrap
msgid ""
"# Draw three white lines.\n"
"for n in `seq 3`; do\n"
"      echo $BLANK80\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:180 abs-guide/horserace.sh:372
msgid "# Set foreground color to black.  echo -ne '\\E[30m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:185
#, no-wrap
msgid ""
"# Create 9 files to stores handicaps.\n"
"for n in `seq 10 7 68`; do\n"
"      touch $n\n"
"done  \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:188
msgid "# Set the first type of \"horse\" the script will draw.  HORSE_TYPE=2"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:208
#, no-wrap
msgid ""
"#  Create position-file and odds-file for every \"horse\".\n"
"#+ In these files, store the current position of the horse,\n"
"#+ the type and the odds.\n"
"for HN in `seq 9`; do\n"
"      touch horse_${HN}_position\n"
"      touch odds_${HN}\n"
"      echo \\-1 > horse_${HN}_position\n"
"      echo $HORSE_TYPE >>  horse_${HN}_position\n"
"      # Define a random handicap for horse.\n"
"       HANDICAP=`random_1_9`\n"
"      # Check if the random_1_9 function returned a good value.\n"
"      while ! echo $HANDICAP | grep [1-9] &amp;> /dev/null; do\n"
"                HANDICAP=`random_1_9`\n"
"      done\n"
"      # Define last handicap position for horse. \n"
"      LHP=`expr $HANDICAP \\* 7 + 3`\n"
"      for FILE in `seq 10 7 $LHP`; do\n"
"            echo $HN >> $FILE\n"
"      done   \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:226
#, no-wrap
msgid ""
"      # Calculate odds.\n"
"      case $HANDICAP in \n"
"              1) ODDS=`echo $HANDICAP \\* 0.25 + 1.25 | bc`\n"
"                                 echo $ODDS > odds_${HN}\n"
"              ;;\n"
"              2 | 3) ODDS=`echo $HANDICAP \\* 0.40 + 1.25 | bc`\n"
"                                       echo $ODDS > odds_${HN}\n"
"              ;;\n"
"              4 | 5 | 6) ODDS=`echo $HANDICAP \\* 0.55 + 1.25 | bc`\n"
"                                             echo $ODDS > odds_${HN}\n"
"              ;; \n"
"              7 | 8) ODDS=`echo $HANDICAP \\* 0.75 + 1.25 | bc`\n"
"                                       echo $ODDS > odds_${HN}\n"
"              ;; \n"
"              9) ODDS=`echo $HANDICAP \\* 0.90 + 1.25 | bc`\n"
"                                  echo $ODDS > odds_${HN}\n"
"      esac\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:229 abs-guide/horserace.sh:350
msgid "done"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:239
#, no-wrap
msgid ""
"# Print odds.\n"
"print_odds() {\n"
"tput cup 6 0\n"
"echo -ne '\\E[30;42m'\n"
"for HN in `seq 9`; do\n"
"      echo \"#$HN odds->\" `cat odds_${HN}`\n"
"done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:248
#, no-wrap
msgid ""
"# Draw the horses at starting line.\n"
"draw_horses() {\n"
"tput cup 6 0\n"
"echo -ne '\\E[30;42m'\n"
"for HN in `seq 9`; do\n"
"      echo /\\\\$HN/\\\\\"                               \"\n"
"done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:250
msgid "print_odds"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:257
msgid ""
"echo -ne '\\E[47m' # Wait for a enter key press to start the race.  # The "
"escape sequence '\\E[?25l' disables the cursor.  tput cup 17 0 echo -e "
"'\\E[?25l'Press [enter] key to start the race...  read -s"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:262
msgid ""
"# Disable normal echoing in the terminal.  # This avoids key presses that "
"might \"contaminate\" the screen #+ during the race.  stty -echo"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:265
msgid "# -------------------------------------------------------- # Start the race."
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:272
msgid ""
"draw_horses echo -ne '\\E[37;47m' move_and_echo 18 1 $BLANK80 echo -ne "
"'\\E[30m' move_and_echo 18 1 Starting...  sleep 1"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:275
msgid "# Set the column of the finish line.  WINNING_POS=74"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:278
msgid "# Define the time the race started.  START_TIME=`date +%s`"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:281
#, no-wrap
msgid ""
"# COL variable needed by following \"while\" construct.\n"
"COL=0    \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:283
msgid "while [ $COL -lt $WINNING_POS ]; do"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:285
#, no-wrap
msgid "          MOVE_HORSE=0     \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:290
#, no-wrap
msgid ""
"          # Check if the random_1_9 function has returned a good value.\n"
"          while ! echo $MOVE_HORSE | grep [1-9] &amp;> /dev/null; do\n"
"                MOVE_HORSE=`random_1_9`\n"
"          done\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:294
#, no-wrap
msgid ""
"          # Define old type and position of the \"randomized horse\".\n"
"          HORSE_TYPE=`cat  horse_${MOVE_HORSE}_position | tail -n 1`\n"
"          COL=$(expr `cat  horse_${MOVE_HORSE}_position | head -n 1`)\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:309
#, no-wrap
msgid ""
"          ADD_POS=1\n"
"          # Check if the current position is an handicap position. \n"
"          if seq 10 7 68 | grep -w $COL &amp;> /dev/null; then\n"
"                if grep -w $MOVE_HORSE $COL &amp;> /dev/null; then\n"
"                      ADD_POS=0\n"
"                      grep -v -w  $MOVE_HORSE $COL > ${COL}_new\n"
"                      rm -f $COL\n"
"                      mv -f ${COL}_new $COL\n"
"                      else ADD_POS=1\n"
"                fi \n"
"          else ADD_POS=1\n"
"          fi\n"
"          COL=`expr $COL + $ADD_POS`\n"
"          echo $COL >  horse_${MOVE_HORSE}_position  # Store new position.\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:318
#, no-wrap
msgid ""
"         # Choose the type of horse to draw.         \n"
"          case $HORSE_TYPE in \n"
"                1) HORSE_TYPE=2; DRAW_HORSE=draw_horse_two\n"
"                ;;\n"
"                2) HORSE_TYPE=1; DRAW_HORSE=draw_horse_one \n"
"          esac       \n"
"          echo $HORSE_TYPE >>  horse_${MOVE_HORSE}_position\n"
"          # Store current type.\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:321
#, no-wrap
msgid ""
"          # Set foreground color to black and background to green.\n"
"          echo -ne '\\E[30;42m'\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:325
#, no-wrap
msgid ""
"          # Move the cursor to new horse position.\n"
"          tput cup `expr $MOVE_HORSE + 5` \\\n"
"\t  `cat  horse_${MOVE_HORSE}_position | head -n 1` \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:329
#, no-wrap
msgid ""
"          # Draw the horse.\n"
"          $DRAW_HORSE\n"
"           usleep $USLEEP_ARG\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:339
#, no-wrap
msgid ""
"           # When all horses have gone beyond field line 15, reprint odds.\n"
"           touch fieldline15\n"
"           if [ $COL = 15 ]; then\n"
"             echo $MOVE_HORSE >> fieldline15  \n"
"           fi\n"
"           if [ `wc -l fieldline15 | cut -f1 -d \" \"` = 9 ]; then\n"
"               print_odds\n"
"               : > fieldline15\n"
"           fi           \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:342
#, no-wrap
msgid ""
"          # Define the leading horse.\n"
"          HIGHEST_POS=`cat *position | sort -n | tail -1`          \n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:348
#, no-wrap
msgid ""
"          # Set background color to white.\n"
"          echo -ne '\\E[47m'\n"
"          tput cup 17 0\n"
"          echo -n Current leader: `grep -w $HIGHEST_POS *position | cut "
"-c7`\\\n"
"\t  \"                              \"\n"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:353
msgid "# Define the time the race finished.  FINISH_TIME=`date +%s`"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:357
msgid ""
"# Set background color to green and enable blinking text.  echo -ne "
"'\\E[30;42m' echo -en '\\E[5m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:362
msgid ""
"# Make the winning horse blink.  tput cup `expr $MOVE_HORSE + 5` \\ `cat "
"horse_${MOVE_HORSE}_position | head -n 1` $DRAW_HORSE"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:365
msgid "# Disable blinking text.  echo -en '\\E[25m'"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:369
msgid ""
"# Set foreground and background color to white.  echo -ne '\\E[37;47m' "
"move_and_echo 18 1 $BLANK80"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:377
msgid ""
"# Make winner blink.  tput cup 17 0 echo -e \"\\E[5mWINNER: "
"$MOVE_HORSE\\E[25m\"\" Odds: `cat odds_${MOVE_HORSE}`\"\\ \" Race time: "
"`expr $FINISH_TIME - $START_TIME` secs\""
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:381
msgid "# Restore cursor and old colors.  echo -en \"\\E[?25h\" echo -en \"\\E[0m\""
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:384
msgid "# Restore echoing.  stty echo"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:387
msgid "# Remove race temp directory.  rm -rf $HORSE_RACE_TMP_DIR"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:389
msgid "tput cup 19 0"
msgstr ""

#. type: Plain text
#: abs-guide/horserace.sh:390
msgid "exit 0"
msgstr ""
