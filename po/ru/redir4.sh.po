# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/redir4.sh:2
#, no-wrap
msgid "#!/bin/bash\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir4.sh:9
#, no-wrap
msgid ""
"if [ -z \"$1\" ]\n"
"then\n"
"  Filename=names.data          # Default, if no filename specified.\n"
"else\n"
"  Filename=$1\n"
"fi  \n"
msgstr ""

#. type: Plain text
#: abs-guide/redir4.sh:18
#, no-wrap
msgid ""
"line_count=`wc $Filename | awk '{ print $1 }'`\n"
"#           Number of lines in target file.\n"
"#\n"
"#  Very contrived and kludgy, nevertheless shows that\n"
"#+ it's possible to redirect stdin within a \"for\" loop...\n"
"#+ if you're clever enough.\n"
"#\n"
"# More concise is     line_count=$(wc -l &lt; \"$Filename\")\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir4.sh:31
#, no-wrap
msgid ""
"for name in `seq $line_count`  # Recall that \"seq\" prints sequence of numbers.\n"
"# while [ \"$name\" != Smith ]   --   more complicated than a \"while\" loop   --\n"
"do\n"
"  read name                    # Reads from $Filename, rather than stdin.\n"
"  echo $name\n"
"  if [ \"$name\" = Smith ]       # Need all this extra baggage here.\n"
"  then\n"
"    break\n"
"  fi  \n"
"done &lt;\"$Filename\"              # Redirects stdin to file $Filename. \n"
"#    ^^^^^^^^^^^^\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir4.sh:32
#, no-wrap
msgid "exit 0\n"
msgstr ""
