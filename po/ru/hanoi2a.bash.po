# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/hanoi2a.bash:6
#, no-wrap
msgid ""
"#! /bin/bash\n"
"# The Towers Of Hanoi\n"
"# Original script (hanoi.bash) copyright (C) 2000 Amit Singh.\n"
"# All Rights Reserved.\n"
"# http://hanoi.kernelthread.com\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:13
#, no-wrap
msgid ""
"#  hanoi2.bash\n"
"#  Version 2: modded for ASCII-graphic display.\n"
"#  Uses code contributed by Antonio Macchi,\n"
"#+ with heavy editing by ABS Guide author.\n"
"#  This variant also falls under the original copyright, see above.\n"
"#  Used in ABS Guide with Amit Singh's permission (thanks!).\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:22
#, no-wrap
msgid ""
"#   Variables   #\n"
"E_NOPARAM=86\n"
"E_BADPARAM=87   # Illegal no. of disks passed to script.\n"
"E_NOEXIT=88\n"
"DELAY=2         # Interval, in seconds, between moves. Change, if desired.\n"
"DISKS=$1\n"
"Moves=0\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:29
#, no-wrap
msgid ""
"MWIDTH=7\n"
"MARGIN=2\n"
"# Arbitrary \"magic\" constants, work okay for relatively small # of disks.\n"
"# BASEWIDTH=51   # Original code.\n"
"let \"basewidth = $MWIDTH * $DISKS + $MARGIN\" # \"Base\" beneath rods.\n"
"# Above \"algorithm\" could likely stand improvement.\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:34
#, no-wrap
msgid ""
"# Display variables.\n"
"let \"disks1 = $DISKS - 1\"\n"
"let \"spaces1 = $DISKS\" \n"
"let \"spaces2 = 2 * $DISKS\" \n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:36
#, no-wrap
msgid "let \"lastmove_t = $DISKS - 1\"                # Final move?\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:39
#, no-wrap
msgid "declare -a Rod1 Rod2 Rod3\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:41
#, no-wrap
msgid "#################\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:45
#, no-wrap
msgid ""
"function repeat  {  # $1=char $2=number of repetitions\n"
"  local n           # Repeat-print a character.\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:50
#, no-wrap
msgid ""
"  for (( n=0; n&lt;$2; n++ )); do\n"
"    echo -n \"$1\"\n"
"  done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:53
#, no-wrap
msgid ""
"function FromRod  {\n"
"  local rod summit weight sequence\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:57
#, no-wrap
msgid ""
"  while true; do\n"
"    rod=$1\n"
"    test ${rod/[^123]/} || continue\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:66
#, no-wrap
msgid ""
"    sequence=$(echo $(seq 0 $disks1 | tac))\n"
"    for summit in $sequence; do\n"
"      eval weight=\\${Rod${rod}[$summit]}\n"
"      test $weight -ne 0 &amp;&amp;\n"
"           { echo \"$rod $summit $weight\"; return; }\n"
"    done\n"
"  done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:70
#, no-wrap
msgid ""
"function ToRod  { # $1=previous (FromRod) weight\n"
"  local rod firstfree weight sequence\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:74
#, no-wrap
msgid ""
"  while true; do\n"
"    rod=$2\n"
"    test ${rod/[^123]} || continue\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:84
#, no-wrap
msgid ""
"    sequence=$(echo $(seq 0 $disks1 | tac))\n"
"    for firstfree in $sequence; do\n"
"      eval weight=\\${Rod${rod}[$firstfree]}\n"
"      test $weight -gt 0 &amp;&amp; { (( firstfree++ )); break; }\n"
"    done\n"
"    test $weight -gt $1 -o $firstfree = 0 &amp;&amp;\n"
"         { echo \"$rod $firstfree\"; return; }\n"
"  done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:88
#, no-wrap
msgid ""
"function PrintRods  {\n"
"  local disk rod empty fill sp sequence\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:90
#, no-wrap
msgid "  tput cup 5 0\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:97
#, no-wrap
msgid ""
"  repeat \" \" $spaces1\n"
"  echo -n \"|\"\n"
"  repeat \" \" $spaces2\n"
"  echo -n \"|\"\n"
"  repeat \" \" $spaces2\n"
"  echo \"|\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:112
#, no-wrap
msgid ""
"  sequence=$(echo $(seq 0 $disks1 | tac))\n"
"  for disk in $sequence; do\n"
"    for rod in {1..3}; do\n"
"      eval empty=$(( $DISKS - (Rod${rod}[$disk] / 2) ))\n"
"      eval fill=\\${Rod${rod}[$disk]}\n"
"      repeat \" \" $empty\n"
"      test $fill -gt 0 &amp;&amp; repeat \"*\" $fill || echo -n \"|\"\n"
"      repeat \" \" $empty\n"
"    done\n"
"    echo\n"
"  done\n"
"  repeat \"=\" $basewidth   # Print \"base\" beneath rods.\n"
"  echo\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:118
#, no-wrap
msgid ""
"display ()\n"
"{\n"
"  echo\n"
"  PrintRods\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:122
#, no-wrap
msgid ""
"  # Get rod-number, summit and weight\n"
"  first=( `FromRod $1` )\n"
"  eval Rod${first[0]}[${first[1]}]=0\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:126
#, no-wrap
msgid ""
"  # Get rod-number and first-free position\n"
"  second=( `ToRod ${first[2]} $2` )\n"
"  eval Rod${second[0]}[${second[1]}]=${first[2]}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:134
#, no-wrap
msgid ""
"  if [ \"${Rod3[lastmove_t]}\" = 1 ]\n"
"  then   # Last move? If yes, then display final position.\n"
"    tput cup 0 0\n"
"    echo; echo \"+  Final Position: $Moves moves\"\n"
"    PrintRods\n"
"  fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:137
#, no-wrap
msgid ""
"  sleep $DELAY\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:139
#, no-wrap
msgid "# From here down, almost the same as original (hanoi.bash) script.\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:159
#, no-wrap
msgid ""
"dohanoi() {   # Recursive function.\n"
"    case $1 in\n"
"    0)\n"
"        ;;\n"
"    *)\n"
"        dohanoi \"$(($1-1))\" $2 $4 $3\n"
"\tif [ \"$Moves\" -ne 0 ]\n"
"        then\n"
"\t  tput cup 0 0\n"
"\t  echo; echo \"+  Position after move $Moves\"\n"
"        fi\n"
"        ((Moves++))\n"
"        echo -n \"   Next move will be:  \"\n"
"        echo $2 \"-->\" $3\n"
"        display $2 $3\n"
"        dohanoi \"$(($1-1))\" $4 $3 $2\n"
"        ;;\n"
"    esac\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:163
#, no-wrap
msgid ""
"setup_arrays ()\n"
"{\n"
"  local dim n elem\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:166
#, no-wrap
msgid ""
"  let \"dim1 = $1 - 1\"\n"
"  elem=$dim1\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:175
#, no-wrap
msgid ""
"  for n in $(seq 0 $dim1)\n"
"  do\n"
"   let \"Rod1[$elem] = 2 * $n + 1\"\n"
"   Rod2[$n]=0\n"
"   Rod3[$n]=0\n"
"   ((elem--))\n"
"  done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:178
#, no-wrap
msgid "###   Main   ###\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:182
#, no-wrap
msgid ""
"trap \"tput cnorm\" 0\n"
"tput civis\n"
"clear\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:184
#, no-wrap
msgid "setup_arrays $DISKS\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:187
#, no-wrap
msgid ""
"tput cup 0 0\n"
"echo; echo \"+  Start Position\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:209
#, no-wrap
msgid ""
"case $# in\n"
"    1) case $(($1>0)) in     # Must have at least one disk.\n"
"       1)\n"
"           disks=$1\n"
"           dohanoi $1 1 3 2\n"
"#          Total moves = 2^n - 1, where n = # of disks.\n"
"\t   echo\n"
"           exit 0;\n"
"           ;;\n"
"       *)\n"
"           echo \"$0: Illegal value for number of disks\";\n"
"           exit $E_BADPARAM;\n"
"           ;;\n"
"       esac\n"
"    ;;\n"
"    *)\n"
"       echo \"usage: $0 N\"\n"
"       echo \"       Where \\\"N\\\" is the number of disks.\"\n"
"       exit $E_NOPARAM;\n"
"       ;;\n"
"esac\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:211
#, no-wrap
msgid "exit $E_NOEXIT   # Shouldn't exit here.\n"
msgstr ""

#. type: Plain text
#: abs-guide/hanoi2a.bash:216
#, no-wrap
msgid ""
"#  Exercise:\n"
"#  --------\n"
"#  There is a minor bug in the script that causes the display of\n"
"#+ the next-to-last move to be skipped.\n"
"#+ Fix this.\n"
msgstr ""
