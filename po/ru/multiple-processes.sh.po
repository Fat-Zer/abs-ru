# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/multiple-processes.sh:5
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# parent.sh\n"
"# Running multiple processes on an SMP box.\n"
"# Author: Tedman Eng\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:8
#, no-wrap
msgid ""
"#  This is the first of two scripts,\n"
"#+ both of which must be present in the current working directory.\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:16
#, no-wrap
msgid ""
"LIMIT=$1         # Total number of process to start\n"
"NUMPROC=4        # Number of concurrent threads (forks?)\n"
"PROCID=1         # Starting Process ID\n"
"echo \"My PID is $$\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:27
#, no-wrap
msgid ""
"function start_thread() {\n"
"        if [ $PROCID -le $LIMIT ] ; then\n"
"                ./child.sh $PROCID&amp;\n"
"                let \"PROCID++\"\n"
"        else\n"
"           echo \"Limit reached.\"\n"
"           wait\n"
"           exit\n"
"        fi\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:32
#, no-wrap
msgid ""
"while [ \"$NUMPROC\" -gt 0 ]; do\n"
"        start_thread;\n"
"        let \"NUMPROC--\"\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:36
#, no-wrap
msgid ""
"while true\n"
"do\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:38
#, no-wrap
msgid "trap \"start_thread\" SIGRTMIN\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:40
#, no-wrap
msgid "done\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:42 abs-guide/multiple-processes.sh:65
#, no-wrap
msgid "exit 0\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:46
#, no-wrap
msgid "# ======== Second script follows ========\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:53
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# child.sh\n"
"# Running multiple processes on an SMP box.\n"
"# This script is called by parent.sh.\n"
"# Author: Tedman Eng\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:63
#, no-wrap
msgid ""
"temp=$RANDOM\n"
"index=$1\n"
"shift\n"
"let \"temp %= 5\"\n"
"let \"temp += 4\"\n"
"echo \"Starting $index  Time:$temp\" \"$@\"\n"
"sleep ${temp}\n"
"echo \"Ending $index\"\n"
"kill -s SIGRTMIN $PPID\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:75
#, no-wrap
msgid ""
"# ======================= SCRIPT AUTHOR'S NOTES ======================= #\n"
"#  It's not completely bug free.\n"
"#  I ran it with limit = 500 and after the first few hundred iterations,\n"
"#+ one of the concurrent threads disappeared!\n"
"#  Not sure if this is collisions from trap signals or something else.\n"
"#  Once the trap is received, there's a brief moment while executing the\n"
"#+ trap handler but before the next trap is set.  During this time, it may\n"
"#+ be possible to miss a trap signal, thus miss spawning a child process.\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:78
#, no-wrap
msgid ""
"#  No doubt someone may spot the bug and will be writing \n"
"#+ . . . in the future.\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:82
#, no-wrap
msgid "# ===================================================================== #\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:86
#, no-wrap
msgid "# ----------------------------------------------------------------------#\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:93
#, no-wrap
msgid ""
"#################################################################\n"
"# The following is the original script written by Vernia Damiano.\n"
"# Unfortunately, it doesn't work properly.\n"
"#################################################################\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:95
#, no-wrap
msgid "#!/bin/bash\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:99
#, no-wrap
msgid ""
"#  Must call script with at least one integer parameter\n"
"#+ (number of concurrent processes).\n"
"#  All other parameters are passed through to the processes started.\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:104
#, no-wrap
msgid ""
"INDICE=8        # Total number of process to start\n"
"TEMPO=5         # Maximum sleep time per process\n"
"E_BADARGS=65    # No arg(s) passed to script.\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:110
#, no-wrap
msgid ""
"if [ $# -eq 0 ] # Check for at least one argument passed to script.\n"
"then\n"
"  echo \"Usage: `basename $0` number_of_processes [passed params]\"\n"
"  exit $E_BADARGS\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:114
#, no-wrap
msgid ""
"NUMPROC=$1              # Number of concurrent process\n"
"shift\n"
"PARAMETRI=( \"$@\" )      # Parameters of each process\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:128
#, no-wrap
msgid ""
"function avvia() {\n"
"         local temp\n"
"         local index\n"
"         temp=$RANDOM\n"
"         index=$1\n"
"         shift\n"
"         let \"temp %= $TEMPO\"\n"
"         let \"temp += 1\"\n"
"         echo \"Starting $index Time:$temp\" \"$@\"\n"
"         sleep ${temp}\n"
"         echo \"Ending $index\"\n"
"         kill -s SIGRTMIN $$\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:137
#, no-wrap
msgid ""
"function parti() {\n"
"         if [ $INDICE -gt 0 ] ; then\n"
"              avvia $INDICE \"${PARAMETRI[@]}\" &amp;\n"
"                let \"INDICE--\"\n"
"         else\n"
"                trap : SIGRTMIN\n"
"         fi\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:139
#, no-wrap
msgid "trap parti SIGRTMIN\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:144
#, no-wrap
msgid ""
"while [ \"$NUMPROC\" -gt 0 ]; do\n"
"         parti;\n"
"         let \"NUMPROC--\"\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:147
#, no-wrap
msgid ""
"wait\n"
"trap - SIGRTMIN\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:149
#, no-wrap
msgid "exit $?\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:155
#, no-wrap
msgid ""
": &lt;&lt;SCRIPT_AUTHOR_COMMENTS\n"
"I had the need to run a program, with specified options, on a number of\n"
"different files, using a SMP machine. So I thought [I'd] keep running\n"
"a specified number of processes and start a new one each time . . . one\n"
"of these terminates.\n"
msgstr ""

#. type: Plain text
#: abs-guide/multiple-processes.sh:160
#, no-wrap
msgid ""
"The \"wait\" instruction does not help, since it waits for a given process\n"
"or *all* process started in background. So I wrote [this] bash script\n"
"that can do the job, using the \"trap\" instruction.\n"
"  --Vernia Damiano\n"
"SCRIPT_AUTHOR_COMMENTS\n"
msgstr ""
