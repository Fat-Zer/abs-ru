# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:01+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/escaped.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# escaped.sh: escaped characters\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:7
#, no-wrap
msgid ""
"#############################################################\n"
"### First, let's show some basic escaped-character usage. ###\n"
"#############################################################\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:10
#, no-wrap
msgid ""
"# Escaping a newline.\n"
"# ------------------\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:12
#, no-wrap
msgid "echo \"\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:17
#, no-wrap
msgid ""
"echo \"This will print\n"
"as two lines.\"\n"
"# This will print\n"
"# as two lines.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:21
#, no-wrap
msgid ""
"echo \"This will print \\\n"
"as one line.\"\n"
"# This will print as one line.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:23
#, no-wrap
msgid "echo; echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:25
#, no-wrap
msgid "echo \"=============\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:33
#, no-wrap
msgid ""
"echo \"\\v\\v\\v\\v\"      # Prints \\v\\v\\v\\v literally.\n"
"# Use the -e option with 'echo' to print escaped characters.\n"
"echo \"=============\"\n"
"echo \"VERTICAL TABS\"\n"
"echo -e \"\\v\\v\\v\\v\"   # Prints 4 vertical tabs.\n"
"echo \"==============\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:37
#, no-wrap
msgid ""
"echo \"QUOTATION MARK\"\n"
"echo -e \"\\042\"       # Prints \" (quote, octal ASCII character 42).\n"
"echo \"==============\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:41
#, no-wrap
msgid "# The $'\\X' construct makes the -e option unnecessary.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:46
#, no-wrap
msgid ""
"echo; echo \"NEWLINE and (maybe) BEEP\"\n"
"echo $'\\n'           # Newline.\n"
"echo $'\\a'           # Alert (beep).\n"
"                     # May only flash, not beep, depending on terminal.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:48
#, no-wrap
msgid "# We have seen $'\\nnn\" string expansion, and now . . .\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:52
#, no-wrap
msgid ""
"# =================================================================== #\n"
"# Version 2 of Bash introduced the $'\\nnn' string expansion construct.\n"
"# =================================================================== #\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:55
#, no-wrap
msgid ""
"echo \"Introducing the \\$\\' ... \\' string-expansion construct . . . \"\n"
"echo \". . . featuring more quotation marks.\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:58
#, no-wrap
msgid ""
"echo $'\\t \\042 \\t'   # Quote (\") framed by tabs.\n"
"# Note that  '\\nnn' is an octal value.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:63
#, no-wrap
msgid ""
"# It also works with hexadecimal values, in an $'\\xhhh' construct.\n"
"echo $'\\t \\x22 \\t'  # Quote (\") framed by tabs.\n"
"# Thank you, Greg Keraunen, for pointing this out.\n"
"# Earlier Bash versions allowed '\\x022'.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:65 abs-guide/escaped.sh:73 abs-guide/escaped.sh:79
#: abs-guide/escaped.sh:84 abs-guide/escaped.sh:90
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:71
#, no-wrap
msgid ""
"# Assigning ASCII characters to a variable.\n"
"# ----------------------------------------\n"
"quote=$'\\042'        # \" assigned to a variable.\n"
"echo \"$quote Quoted string $quote and this lies outside the quotes.\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:77
#, no-wrap
msgid ""
"# Concatenating ASCII chars in a variable.\n"
"triple_underline=$'\\137\\137\\137'  # 137 is octal ASCII code for '_'.\n"
"echo \"$triple_underline UNDERLINE $triple_underline\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:82
#, no-wrap
msgid ""
"ABC=$'\\101\\102\\103\\010'           # 101, 102, 103 are octal A, B, C.\n"
"echo $ABC\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:88
#, no-wrap
msgid ""
"escape=$'\\033'                    # 033 is octal for escape.\n"
"echo \"\\\"escape\\\" echoes as $escape\"\n"
"#                                   no visible output.\n"
msgstr ""

#. type: Plain text
#: abs-guide/escaped.sh:91
#, no-wrap
msgid "exit 0\n"
msgstr ""
