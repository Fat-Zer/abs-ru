# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:01+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/broken-link.sh:5
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# broken-link.sh\n"
"# Written by Lee bigelow &lt;ligelowbee@yahoo.com&gt;\n"
"# Used in ABS Guide with permission.\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:20
#, no-wrap
msgid ""
"#  A pure shell script to find dead symlinks and output them quoted\n"
"#+ so they can be fed to xargs and dealt with :)\n"
"#+ eg. sh broken-link.sh /somedir /someotherdir|xargs rm\n"
"#\n"
"#  This, however, is a better method:\n"
"#\n"
"#  find \"somedir\" -type l -print0|\\\n"
"#  xargs -r0 file|\\\n"
"#  grep \"broken symbolic\"|\n"
"#  sed -e 's/^\\|: *broken symbolic.*$/\"/g'\n"
"#\n"
"#+ but that wouldn't be pure Bash, now would it.\n"
"#  Caution: beware the /proc file system and any circular links!\n"
"################################################################\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:26
#, no-wrap
msgid ""
"#  If no args are passed to the script set directories-to-search \n"
"#+ to current directory.  Otherwise set the directories-to-search \n"
"#+ to the args passed.\n"
"######################\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:28
#, no-wrap
msgid "[ $# -eq 0 ] &amp;&amp; directorys=`pwd` || directorys=$@\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:35
#, no-wrap
msgid ""
"#  Setup the function linkchk to check the directory it is passed \n"
"#+ for files that are links and don't exist, then print them quoted.\n"
"#  If one of the elements in the directory is a subdirectory then \n"
"#+ send that subdirectory to the linkcheck function.\n"
"##########\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:43
#, no-wrap
msgid ""
"linkchk () {\n"
"    for element in $1/*; do\n"
"      [ -h \"$element\" -a ! -e \"$element\" ] &amp;&amp; echo \\\"$element\\\"\n"
"      [ -d \"$element\" ] &amp;&amp; linkchk $element\n"
"    # Of course, '-h' tests for symbolic link, '-d' for directory.\n"
"    done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:56
#, no-wrap
msgid ""
"#  Send each arg that was passed to the script to the linkchk() function\n"
"#+ if it is a valid directoy.  If not, then print the error message\n"
"#+ and usage info.\n"
"##################\n"
"for directory in $directorys; do\n"
"    if [ -d $directory ]\n"
"\tthen linkchk $directory\n"
"\telse \n"
"\t    echo \"$directory is not a directory\"\n"
"\t    echo \"Usage: $0 dir1 dir2 ...\"\n"
"    fi\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:57
#, no-wrap
msgid "exit $?\n"
msgstr ""
