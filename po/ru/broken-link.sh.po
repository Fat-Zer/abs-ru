# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-06 22:37+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/broken-link.sh:5
msgid ""
"#!/bin/bash # broken-link.sh # Written by Lee bigelow "
"&lt;ligelowbee@yahoo.com&gt; # Used in ABS Guide with permission."
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:20
msgid ""
"# A pure shell script to find dead symlinks and output them quoted #+ so "
"they can be fed to xargs and dealt with :)  #+ eg. sh broken-link.sh "
"/somedir /someotherdir|xargs rm # # This, however, is a better method: # # "
"find \"somedir\" -type l -print0|\\ # xargs -r0 file|\\ # grep \"broken "
"symbolic\"| # sed -e 's/^\\|: *broken symbolic.*$/\"/g' # #+ but that "
"wouldn't be pure Bash, now would it.  # Caution: beware the /proc file "
"system and any circular links! "
"################################################################"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:26
msgid ""
"# If no args are passed to the script set directories-to-search #+ to "
"current directory.  Otherwise set the directories-to-search #+ to the args "
"passed.  ######################"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:28
msgid "[ $# -eq 0 ] &amp;&amp; directorys=`pwd` || directorys=$@"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:35
msgid ""
"# Setup the function linkchk to check the directory it is passed #+ for "
"files that are links and don't exist, then print them quoted.  # If one of "
"the elements in the directory is a subdirectory then #+ send that "
"subdirectory to the linkcheck function.  ##########"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:43
#, no-wrap
msgid ""
"linkchk () {\n"
"    for element in $1/*; do\n"
"      [ -h \"$element\" -a ! -e \"$element\" ] &amp;&amp; echo "
"\\\"$element\\\"\n"
"      [ -d \"$element\" ] &amp;&amp; linkchk $element\n"
"    # Of course, '-h' tests for symbolic link, '-d' for directory.\n"
"    done\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:56
#, no-wrap
msgid ""
"#  Send each arg that was passed to the script to the linkchk() function\n"
"#+ if it is a valid directoy.  If not, then print the error message\n"
"#+ and usage info.\n"
"##################\n"
"for directory in $directorys; do\n"
"    if [ -d $directory ]\n"
"\tthen linkchk $directory\n"
"\telse \n"
"\t    echo \"$directory is not a directory\"\n"
"\t    echo \"Usage: $0 dir1 dir2 ...\"\n"
"    fi\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/broken-link.sh:57
msgid "exit $?"
msgstr ""
