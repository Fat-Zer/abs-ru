# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-07 18:30+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/max2.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# max2.sh: Maximum of two LARGE integers.\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:6
#, no-wrap
msgid ""
"#  This is the previous \"max.sh\" example,\n"
"#+ modified to permit comparing large integers.\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:10
#, no-wrap
msgid ""
"EQUAL=0             # Return value if both params equal.\n"
"E_PARAM_ERR=-99999  # Not enough params passed to function.\n"
"#           ^^^^^^    Out of range of any params that might be passed.\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:18
#, no-wrap
msgid ""
"max2 ()             # \"Returns\" larger of two numbers.\n"
"{\n"
"if [ -z \"$2\" ]\n"
"then\n"
"  echo $E_PARAM_ERR\n"
"  return\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:31
#, no-wrap
msgid ""
"if [ \"$1\" -eq \"$2\" ]\n"
"then\n"
"  echo $EQUAL\n"
"  return\n"
"else\n"
"  if [ \"$1\" -gt \"$2\" ]\n"
"  then\n"
"    retval=$1\n"
"  else\n"
"    retval=$2\n"
"  fi\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:35
#, no-wrap
msgid ""
"echo $retval        # Echoes (to stdout), rather than returning value.\n"
"                    # Why?\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:43
#, no-wrap
msgid ""
"return_val=$(max2 33001 33997)\n"
"#            ^^^^             Function name\n"
"#                 ^^^^^ ^^^^^ Params passed\n"
"#  This is actually a form of command substitution:\n"
"#+ treating a function as if it were a command,\n"
"#+ and assigning the stdout of the function to the variable "
"\"return_val.\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:56
#, no-wrap
msgid ""
"# ========================= OUTPUT ========================\n"
"if [ \"$return_val\" -eq \"$E_PARAM_ERR\" ]\n"
"  then\n"
"  echo \"Error in parameters passed to comparison function!\"\n"
"elif [ \"$return_val\" -eq \"$EQUAL\" ]\n"
"  then\n"
"    echo \"The two numbers are equal.\"\n"
"else\n"
"    echo \"The larger of the two numbers is $return_val.\"\n"
"fi\n"
"# =========================================================\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:58
#, no-wrap
msgid "exit 0\n"
msgstr ""

#. type: Plain text
#: abs-guide/max2.sh:64
#, no-wrap
msgid ""
"#  Exercises:\n"
"#  ---------\n"
"#  1) Find a more elegant way of testing\n"
"#+    the parameters passed to the function.\n"
"#  2) Simplify the if/then structure at \"OUTPUT.\"\n"
"#  3) Rewrite the script to take input from command-line parameters.\n"
msgstr ""
