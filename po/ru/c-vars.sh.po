# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:01+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/c-vars.sh:4
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# c-vars.sh\n"
"# Manipulating a variable, C-style, using the (( ... )) construct.\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:7 abs-guide/c-vars.sh:26 abs-guide/c-vars.sh:38
#: abs-guide/c-vars.sh:45
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:11
#, no-wrap
msgid ""
"(( a = 23 ))  #  Setting a value, C-style,\n"
"              #+ with spaces on both sides of the \"=\".\n"
"echo \"a (initial value) = $a\"   # 23\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:14
#, no-wrap
msgid ""
"(( a++ ))     #  Post-increment 'a', C-style.\n"
"echo \"a (after a++) = $a\"       # 24\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:17
#, no-wrap
msgid ""
"(( a-- ))     #  Post-decrement 'a', C-style.\n"
"echo \"a (after a--) = $a\"       # 23\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:21
#, no-wrap
msgid ""
"(( ++a ))     #  Pre-increment 'a', C-style.\n"
"echo \"a (after ++a) = $a\"       # 24\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:24
#, no-wrap
msgid ""
"(( --a ))     #  Pre-decrement 'a', C-style.\n"
"echo \"a (after --a) = $a\"       # 23\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:30
#, no-wrap
msgid ""
"########################################################\n"
"#  Note that, as in C, pre- and post-decrement operators\n"
"#+ have different side-effects.\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:33
#, no-wrap
msgid ""
"n=1; let --n &amp;&amp; echo \"True\" || echo \"False\"  # False\n"
"n=1; let n-- &amp;&amp; echo \"True\" || echo \"False\"  # True\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:36
#, no-wrap
msgid ""
"#  Thanks, Jeroen Domburg.\n"
"########################################################\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:43
#, no-wrap
msgid ""
"(( t = a&lt;45?7:11 ))   # C-style trinary operator.\n"
"#       ^  ^ ^\n"
"echo \"If a &lt; 45, then t = 7, else t = 11.\"  # a = 23\n"
"echo \"t = $t \"                              # t = 7\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:55
#, no-wrap
msgid ""
"# -----------------\n"
"# Easter Egg alert!\n"
"# -----------------\n"
"#  Chet Ramey seems to have snuck a bunch of undocumented C-style\n"
"#+ constructs into Bash (actually adapted from ksh, pretty much).\n"
"#  In the Bash docs, Ramey calls (( ... )) shell arithmetic,\n"
"#+ but it goes far beyond that.\n"
"#  Sorry, Chet, the secret is out.\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:57
#, no-wrap
msgid "# See also \"for\" and \"while\" loops using the (( ... )) construct.\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:59
#, no-wrap
msgid "# These work only with version 2.04 or later of Bash.\n"
msgstr ""

#. type: Plain text
#: abs-guide/c-vars.sh:60
#, no-wrap
msgid "exit\n"
msgstr ""
