# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/strip-comments.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# strip-comment.sh: Strips out the comments (/* COMMENT */) in a C program.\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:7
#, no-wrap
msgid ""
"E_NOARGS=0\n"
"E_ARGERROR=66\n"
"E_WRONG_FILE_TYPE=67\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:13
#, no-wrap
msgid ""
"if [ $# -eq \"$E_NOARGS\" ]\n"
"then\n"
"  echo \"Usage: `basename $0` C-program-file\" >&amp;2 # Error message to stderr.\n"
"  exit $E_ARGERROR\n"
"fi  \n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:20
#, no-wrap
msgid ""
"# Test for correct file type.\n"
"type=`file $1 | awk '{ print $2, $3, $4, $5 }'`\n"
"# \"file $1\" echoes file type . . .\n"
"# Then awk removes the first field, the filename . . .\n"
"# Then the result is fed into the variable \"type.\"\n"
"correct_type=\"ASCII C program text\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:28
#, no-wrap
msgid ""
"if [ \"$type\" != \"$correct_type\" ]\n"
"then\n"
"  echo\n"
"  echo \"This script works on C program files only.\"\n"
"  echo\n"
"  exit $E_WRONG_FILE_TYPE\n"
"fi  \n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:38
#, no-wrap
msgid ""
"# Rather cryptic sed script:\n"
"#--------\n"
"sed '\n"
"/^\\/\\*/d\n"
"/.*\\*\\//d\n"
"' $1\n"
"#--------\n"
"# Easy to understand if you take several hours to learn sed fundamentals.\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:43
#, no-wrap
msgid ""
"#  Need to add one more line to the sed script to deal with\n"
"#+ case where line of code has a comment following it on same line.\n"
"#  This is left as a non-trivial exercise.\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:46
#, no-wrap
msgid ""
"#  Also, the above code deletes non-comment lines with a \"*/\" . . .\n"
"#+ not a desirable result.\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:48 abs-guide/strip-comments.sh:79
#, no-wrap
msgid "exit 0\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:52
#, no-wrap
msgid ""
"# ----------------------------------------------------------------\n"
"# Code below this line will not execute because of 'exit 0' above.\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:54
#, no-wrap
msgid "# Stephane Chazelas suggests the following alternative:\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:59
#, no-wrap
msgid ""
"usage() {\n"
"  echo \"Usage: `basename $0` C-program-file\" >&amp;2\n"
"  exit 1\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:69
#, no-wrap
msgid ""
"WEIRD=`echo -n -e '\\377'`   # or WEIRD=$'\\377'\n"
"[[ $# -eq 1 ]] || usage\n"
"case `file \"$1\"` in\n"
"  *\"C program text\"*) sed -e \"s%/\\*%${WEIRD}%g;s%\\*/%${WEIRD}%g\" \"$1\" \\\n"
"     | tr '\\377\\n' '\\n\\377' \\\n"
"     | sed -ne 'p;n' \\\n"
"     | tr -d '\\n' | tr '\\377' '\\n';;\n"
"  *) usage;;\n"
"esac\n"
msgstr ""

#. type: Plain text
#: abs-guide/strip-comments.sh:78
#, no-wrap
msgid ""
"#  This is still fooled by things like:\n"
"#  printf(\"/*\");\n"
"#  or\n"
"#  /*  /* buggy embedded comment */\n"
"#\n"
"#  To handle all special cases (comments in strings, comments in string\n"
"#+ where there is a \\\", \\\\\" ...),\n"
"#+ the only way is to write a C parser (using lex or yacc perhaps?).\n"
msgstr ""
