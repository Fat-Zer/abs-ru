# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:01+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/brownian.sh:6
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# brownian.sh\n"
"# Author: Mendel Cooper\n"
"# Reldate: 10/26/07\n"
"# License: GPL3\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:12
#, no-wrap
msgid ""
"#  ----------------------------------------------------------------\n"
"#  This script models Brownian motion:\n"
"#+ the random wanderings of tiny particles in a fluid,\n"
"#+ as they are buffeted by random currents and collisions.\n"
"#+ This is colloquially known as the \"Drunkard's Walk.\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:28
#, no-wrap
msgid ""
"#  It can also be considered as a stripped-down simulation of a\n"
"#+ Galton Board, a slanted board with a pattern of pegs,\n"
"#+ down which rolls a succession of marbles, one at a time.\n"
"#+ At the bottom is a row of slots or catch basins in which\n"
"#+ the marbles come to rest at the end of their journey.\n"
"#  Think of it as a kind of bare-bones Pachinko game.\n"
"#  As you see by running the script,\n"
"#+ most of the marbles cluster around the center slot.\n"
"#+ This is consistent with the expected binomial distribution.\n"
"#  As a Galton Board simulation, the script\n"
"#+ disregards such parameters as\n"
"#+ board tilt-angle, rolling friction of the marbles,\n"
"#+ angles of impact, and elasticity of the pegs.\n"
"#  To what extent does this affect the accuracy of the simulation?\n"
"#  ----------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:35
#, no-wrap
msgid ""
"PASSES=500            #  Number of particle interactions / marbles.\n"
"ROWS=10               #  Number of \"collisions\" (or horiz. peg rows).\n"
"RANGE=3               #  0 - 2 output range from $RANDOM.\n"
"POS=0                 #  Left/right position.\n"
"RANDOM=$$             #  Seeds the random number generator from PID\n"
"                      #+ of script.\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:38
#, no-wrap
msgid ""
"declare -a Slots      # Array holding cumulative results of passes.\n"
"NUMSLOTS=21           # Number of slots at bottom of board.\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:45
#, no-wrap
msgid ""
"Initialize_Slots () { # Zero out all elements of the array.\n"
"for i in $( seq $NUMSLOTS )\n"
"do\n"
"  Slots[$i]=0\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:48
#, no-wrap
msgid ""
"echo                  # Blank line at beginning of run.\n"
"  }\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:57
#, no-wrap
msgid ""
"Show_Slots () {\n"
"echo; echo\n"
"echo -n \" \"\n"
"for i in $( seq $NUMSLOTS )   # Pretty-print array elements.\n"
"do\n"
"  printf \"%3d\" ${Slots[$i]}   # Allot three spaces per result.\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:65
#, no-wrap
msgid ""
"echo # Row of slots:\n"
"echo \" |__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|__|\"\n"
"echo \"                                ||\"\n"
"echo #  Note that if the count within any particular slot exceeds 99,\n"
"     #+ it messes up the display.\n"
"     #  Running only(!) 500 passes usually avoids this.\n"
"  }\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:77
#, no-wrap
msgid ""
"Move () {              # Move one unit right / left, or stay put.\n"
"  Move=$RANDOM         # How random is $RANDOM? Well, let's see ...\n"
"  let \"Move %= RANGE\"  # Normalize into range of 0 - 2.\n"
"  case \"$Move\" in\n"
"    0 ) ;;                   # Do nothing, i.e., stay in place.\n"
"    1 ) ((POS--));;          # Left.\n"
"    2 ) ((POS++));;          # Right.\n"
"    * ) echo -n \"Error \";;   # Anomaly! (Should never occur.)\n"
"  esac\n"
"  }\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:86
#, no-wrap
msgid ""
"Play () {                    # Single pass (inner loop).\n"
"i=0\n"
"while [ \"$i\" -lt \"$ROWS\" ]   # One event per row.\n"
"do\n"
"  Move\n"
"  ((i++));\n"
"done\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:90
#, no-wrap
msgid ""
"SHIFT=11                     # Why 11, and not 10?\n"
"let \"POS += $SHIFT\"          # Shift \"zero position\" to center.\n"
"(( Slots[$POS]++ ))          # DEBUG: echo $POS\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:92
#, no-wrap
msgid "# echo -n \"$POS \"\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:94
#, no-wrap
msgid "  }\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:105
#, no-wrap
msgid ""
"Run () {                     # Outer loop.\n"
"p=0\n"
"while [ \"$p\" -lt \"$PASSES\" ]\n"
"do\n"
"  Play\n"
"  (( p++ ))\n"
"  POS=0                      # Reset to zero. Why?\n"
"done\n"
"  }\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:113
#, no-wrap
msgid ""
"# --------------\n"
"# main ()\n"
"Initialize_Slots\n"
"Run\n"
"Show_Slots\n"
"# --------------\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:115
#, no-wrap
msgid "exit $?\n"
msgstr ""

#. type: Plain text
#: abs-guide/brownian.sh:123
#, no-wrap
msgid ""
"#  Exercises:\n"
"#  ---------\n"
"#  1) Show the results in a vertical bar graph, or as an alternative,\n"
"#+    a scattergram.\n"
"#  2) Alter the script to use /dev/urandom instead of $RANDOM.\n"
"#     Will this make the results more random?\n"
"#  3) Provide some sort of \"animation\" or graphic output\n"
"#     for each marble played.\n"
msgstr ""
