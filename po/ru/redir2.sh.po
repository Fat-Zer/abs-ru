# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-07 18:30+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/redir2.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# redir2.sh\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:12
#, no-wrap
msgid ""
"if [ -z \"$1\" ]\n"
"then\n"
"  Filename=names.data       # Default, if no filename specified.\n"
"else\n"
"  Filename=$1\n"
"fi  \n"
"#+ Filename=${1:-names.data}\n"
"#  can replace the above test (parameter substitution).\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:14
#, no-wrap
msgid "count=0\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:16
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:24
#, no-wrap
msgid ""
"while [ \"$name\" != Smith ]  # Why is variable $name in quotes?\n"
"do\n"
"  read name                 # Reads from $Filename, rather than stdin.\n"
"  echo $name\n"
"  let \"count += 1\"\n"
"done &lt;\"$Filename\"           # Redirects stdin to file $Filename. \n"
"#    ^^^^^^^^^^^^\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:26
#, no-wrap
msgid "echo; echo \"$count names read\"; echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:28
#, no-wrap
msgid "exit 0\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:35
#, no-wrap
msgid ""
"#  Note that in some older shell scripting languages,\n"
"#+ the redirected loop would run as a subshell.\n"
"#  Therefore, $count would return 0, the initialized value outside the "
"loop.\n"
"#  Bash and ksh avoid starting a subshell *whenever possible*,\n"
"#+ so that this script, for example, runs correctly.\n"
"#  (Thanks to Heiner Steven for pointing this out.)\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:39
#, no-wrap
msgid ""
"#  However . . .\n"
"#  Bash *can* sometimes start a subshell in a PIPED \"while-read\" loop,\n"
"#+ as distinct from a REDIRECTED \"while\" loop.\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:46
#, no-wrap
msgid ""
"abc=hi\n"
"echo -e \"1\\n2\\n3\" | while read l\n"
"     do abc=\"$l\"\n"
"        echo $abc\n"
"     done\n"
"echo $abc\n"
msgstr ""

#. type: Plain text
#: abs-guide/redir2.sh:49
#, no-wrap
msgid ""
"#  Thanks, Bruno de Oliveira Schneider, for demonstrating this\n"
"#+ with the above snippet of code.\n"
"#  And, thanks, Brian Onn, for correcting an annotation error.\n"
msgstr ""
