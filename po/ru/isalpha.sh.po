# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-07 18:30+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/isalpha.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# isalpha.sh: Using a \"case\" structure to filter a string.\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:7
#, no-wrap
msgid ""
"SUCCESS=0\n"
"FAILURE=1   #  Was FAILURE=-1,\n"
"            #+ but Bash no longer allows negative return value.\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:14
#, no-wrap
msgid ""
"isalpha ()  # Tests whether *first character* of input string is "
"alphabetic.\n"
"{\n"
"if [ -z \"$1\" ]                # No argument passed?\n"
"then\n"
"  return $FAILURE\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:20
#, no-wrap
msgid ""
"case \"$1\" in\n"
"  [a-zA-Z]*) return $SUCCESS;;  # Begins with a letter?\n"
"  *        ) return $FAILURE;;\n"
"esac\n"
"}             # Compare this with \"isalpha ()\" function in C.\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:25
#, no-wrap
msgid ""
"isalpha2 ()   # Tests whether *entire string* is alphabetic.\n"
"{\n"
"  [ $# -eq 1 ] || return $FAILURE\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:31
#, no-wrap
msgid ""
"  case $1 in\n"
"  *[!a-zA-Z]*|\"\") return $FAILURE;;\n"
"               *) return $SUCCESS;;\n"
"  esac\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:35
#, no-wrap
msgid ""
"isdigit ()    # Tests whether *entire string* is numerical.\n"
"{             # In other words, tests for integer variable.\n"
"  [ $# -eq 1 ] || return $FAILURE\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:41
#, no-wrap
msgid ""
"  case $1 in\n"
"    *[!0-9]*|\"\") return $FAILURE;;\n"
"              *) return $SUCCESS;;\n"
"  esac\n"
"}\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:59
#, no-wrap
msgid ""
"check_var ()  # Front-end to isalpha ().\n"
"{\n"
"if isalpha \"$@\"\n"
"then\n"
"  echo \"\\\"$*\\\" begins with an alpha character.\"\n"
"  if isalpha2 \"$@\"\n"
"  then        # No point in testing if first char is non-alpha.\n"
"    echo \"\\\"$*\\\" contains only alpha characters.\"\n"
"  else\n"
"    echo \"\\\"$*\\\" contains at least one non-alpha character.\"\n"
"  fi  \n"
"else\n"
"  echo \"\\\"$*\\\" begins with a non-alpha character.\"\n"
"              # Also \"non-alpha\" if no argument passed.\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:61 abs-guide/isalpha.sh:74
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:63 abs-guide/isalpha.sh:76
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:72
#, no-wrap
msgid ""
"digit_check ()  # Front-end to isdigit ().\n"
"{\n"
"if isdigit \"$@\"\n"
"then\n"
"  echo \"\\\"$*\\\" contains only digits [0 - 9].\"\n"
"else\n"
"  echo \"\\\"$*\\\" has at least one non-digit character.\"\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:86
#, no-wrap
msgid ""
"a=23skidoo\n"
"b=H3llo\n"
"c=-What?\n"
"d=What?\n"
"e=$(echo $b)   # Command substitution.\n"
"f=AbcDef\n"
"g=27234\n"
"h=27a34\n"
"i=27.34\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:98
#, no-wrap
msgid ""
"check_var $a\n"
"check_var $b\n"
"check_var $c\n"
"check_var $d\n"
"check_var $e\n"
"check_var $f\n"
"check_var     # No argument passed, so what happens?\n"
"#\n"
"digit_check $g\n"
"digit_check $h\n"
"digit_check $i\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:101
#, no-wrap
msgid "exit 0        # Script improved by S.C.\n"
msgstr ""

#. type: Plain text
#: abs-guide/isalpha.sh:106
#, no-wrap
msgid ""
"# Exercise:\n"
"# --------\n"
"#  Write an 'isfloat ()' function that tests for floating point numbers.\n"
"#  Hint: The function duplicates 'isdigit ()',\n"
"#+ but adds a test for a mandatory decimal point.\n"
msgstr ""
