# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the abs-guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abs-guide 10\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/ex7.sh:2
#, no-wrap
msgid "#!/bin/bash\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:5
#, no-wrap
msgid ""
"var1=abcd-1234-defg\n"
"echo \"var1 = $var1\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:12
#, no-wrap
msgid ""
"t=${var1#*-*}\n"
"echo \"var1 (with everything, up to and including first - stripped out) = $t\"\n"
"#  t=${var1#*-}  works just the same,\n"
"#+ since # matches the shortest string,\n"
"#+ and * matches everything preceding, including an empty string.\n"
"# (Thanks, Stephane Chazelas, for pointing this out.)\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:15
#, no-wrap
msgid ""
"t=${var1##*-*}\n"
"echo \"If var1 contains a \\\"-\\\", returns empty string...   var1 = $t\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:19
#, no-wrap
msgid ""
"t=${var1%*-*}\n"
"echo \"var1 (with everything from the last - on stripped out) = $t\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:21 abs-guide/ex7.sh:44 abs-guide/ex7.sh:51
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:34
#, no-wrap
msgid ""
"# -------------------------------------------\n"
"path_name=/home/bozo/ideas/thoughts.for.today\n"
"# -------------------------------------------\n"
"echo \"path_name = $path_name\"\n"
"t=${path_name##/*/}\n"
"echo \"path_name, stripped of prefixes = $t\"\n"
"# Same effect as   t=`basename $path_name` in this particular case.\n"
"#  t=${path_name%/}; t=${t##*/}   is a more general solution,\n"
"#+ but still fails sometimes.\n"
"#  If $path_name ends with a newline, then `basename $path_name` will not work,\n"
"#+ but the above expression will.\n"
"# (Thanks, S.C.)\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:42
#, no-wrap
msgid ""
"t=${path_name%/*.*}\n"
"# Same effect as   t=`dirname $path_name`\n"
"echo \"path_name, stripped of suffixes = $t\"\n"
"# These will fail in some cases, such as \"../\", \"/foo////\", # \"foo/\", \"/\".\n"
"#  Removing suffixes, especially when the basename has no suffix,\n"
"#+ but the dirname does, also complicates matters.\n"
"# (Thanks, S.C.)\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:49
#, no-wrap
msgid ""
"t=${path_name:11}\n"
"echo \"$path_name, with first 11 chars stripped off = $t\"\n"
"t=${path_name:11:5}\n"
"echo \"$path_name, with first 11 chars stripped off, length 5 = $t\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:60
#, no-wrap
msgid ""
"t=${path_name/bozo/clown}\n"
"echo \"$path_name with \\\"bozo\\\" replaced  by \\\"clown\\\" = $t\"\n"
"t=${path_name/today/}\n"
"echo \"$path_name with \\\"today\\\" deleted = $t\"\n"
"t=${path_name//o/O}\n"
"echo \"$path_name with all o's capitalized = $t\"\n"
"t=${path_name//o/}\n"
"echo \"$path_name with all o's deleted = $t\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/ex7.sh:61
#, no-wrap
msgid "exit 0\n"
msgstr ""
