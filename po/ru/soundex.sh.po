# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-07-07 18:30+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/soundex.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# soundex.sh: Calculate \"soundex\" code for names\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:18
#, no-wrap
msgid ""
"# =======================================================\n"
"#        Soundex script\n"
"#              by\n"
"#         Mendel Cooper\n"
"#     thegrendel.abs@gmail.com\n"
"#     reldate: 23 January, 2002\n"
"#\n"
"#   Placed in the Public Domain.\n"
"#\n"
"# A slightly different version of this script appeared in\n"
"#+ Ed Schaefer's July, 2002 \"Shell Corner\" column\n"
"#+ in \"Unix Review\" on-line,\n"
"#+ http://www.unixreview.com/documents/uni1026336632258/\n"
"# =======================================================\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:22
#, no-wrap
msgid ""
"ARGCOUNT=1                     # Need name as argument.\n"
"E_WRONGARGS=90\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:28
#, no-wrap
msgid ""
"if [ $# -ne \"$ARGCOUNT\" ]\n"
"then\n"
"  echo \"Usage: `basename $0` name\"\n"
"  exit $E_WRONGARGS\n"
"fi  \n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:32
#, no-wrap
msgid ""
"assign_value ()                #  Assigns numerical value\n"
"{                              #+ to letters of name.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:39
#, no-wrap
msgid ""
"  val1=bfpv                    # 'b,f,p,v' = 1\n"
"  val2=cgjkqsxz                # 'c,g,j,k,q,s,x,z' = 2\n"
"  val3=dt                      #  etc.\n"
"  val4=l\n"
"  val5=mn\n"
"  val6=r\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:42
#, no-wrap
msgid ""
"# Exceptionally clever use of 'tr' follows.\n"
"# Try to figure out what is going on here.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:49
#, no-wrap
msgid ""
"value=$( echo \"$1\" \\\n"
"| tr -d wh \\\n"
"| tr $val1 1 | tr $val2 2 | tr $val3 3 \\\n"
"| tr $val4 4 | tr $val5 5 | tr $val6 6 \\\n"
"| tr -s 123456 \\\n"
"| tr -d aeiouy )\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:56
#, no-wrap
msgid ""
"# Assign letter values.\n"
"# Remove duplicate numbers, except when separated by vowels.\n"
"# Ignore vowels, except as separators, so delete them last.\n"
"# Ignore 'w' and 'h', even as separators, so delete them first.\n"
"#\n"
"# The above command substitution lays more pipe than a plumber &lt;g&gt;.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:58
#, no-wrap
msgid "}  \n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:63
#, no-wrap
msgid ""
"input_name=\"$1\"\n"
"echo\n"
"echo \"Name = $input_name\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:70
#, no-wrap
msgid ""
"# Change all characters of name input to lowercase.\n"
"# ------------------------------------------------\n"
"name=$( echo $input_name | tr A-Z a-z )\n"
"# ------------------------------------------------\n"
"# Just in case argument to script is mixed case.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:74
#, no-wrap
msgid ""
"# Prefix of soundex code: first letter of name.\n"
"# --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:80
#, no-wrap
msgid ""
"char_pos=0                     # Initialize character position. \n"
"prefix0=${name:$char_pos:1}\n"
"prefix=`echo $prefix0 | tr a-z A-Z`\n"
"                               # Uppercase 1st letter of soundex.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:83
#, no-wrap
msgid ""
"let \"char_pos += 1\"            # Bump character position to 2nd letter of "
"name.\n"
"name1=${name:$char_pos}\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:92
#, no-wrap
msgid ""
"# ++++++++++++++++++++++++++ Exception Patch "
"++++++++++++++++++++++++++++++\n"
"#  Now, we run both the input name and the name shifted one char\n"
"#+ to the right through the value-assigning function.\n"
"#  If we get the same value out, that means that the first two characters\n"
"#+ of the name have the same value assigned, and that one should cancel.\n"
"#  However, we also need to test whether the first letter of the name\n"
"#+ is a vowel or 'w' or 'h', because otherwise this would bollix things "
"up.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:94
#, no-wrap
msgid "char1=`echo $prefix | tr A-Z a-z`    # First letter of name, lowercased.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:106
#, no-wrap
msgid ""
"assign_value $name\n"
"s1=$value\n"
"assign_value $name1\n"
"s2=$value\n"
"assign_value $char1\n"
"s3=$value\n"
"s3=9$s3                              #  If first letter of name is a vowel\n"
"                                     #+ or 'w' or 'h',\n"
"                                     #+ then its \"value\" will be null "
"(unset).\n"
"\t\t\t\t     #+ Therefore, set it to 9, an otherwise\n"
"\t\t\t\t     #+ unused value, which can be tested for.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:115
#, no-wrap
msgid ""
"if [[ \"$s1\" -ne \"$s2\" || \"$s3\" -eq 9 ]]\n"
"then\n"
"  suffix=$s2\n"
"else  \n"
"  suffix=${s2:$char_pos}\n"
"fi  \n"
"# ++++++++++++++++++++++ end Exception Patch "
"++++++++++++++++++++++++++++++\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:118
#, no-wrap
msgid "padding=000                    # Use at most 3 zeroes to pad.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:121
#, no-wrap
msgid "soun=$prefix$suffix$padding    # Pad with zeroes.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:124
#, no-wrap
msgid ""
"MAXLEN=4                       # Truncate to maximum of 4 chars.\n"
"soundex=${soun:0:$MAXLEN}\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:126
#, no-wrap
msgid "echo \"Soundex = $soundex\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:128
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:134
#, no-wrap
msgid ""
"#  The soundex code is a method of indexing and classifying names\n"
"#+ by grouping together the ones that sound alike.\n"
"#  The soundex code for a given name is the first letter of the name,\n"
"#+ followed by a calculated three-number code.\n"
"#  Similar sounding names should have almost the same soundex codes.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:140
#, no-wrap
msgid ""
"#   Examples:\n"
"#   Smith and Smythe both have a \"S-530\" soundex.\n"
"#   Harrison = H-625\n"
"#   Hargison = H-622\n"
"#   Harriman = H-655\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:150
#, no-wrap
msgid ""
"#  This works out fairly well in practice, but there are numerous "
"anomalies.\n"
"#\n"
"#\n"
"#  The U.S. Census and certain other governmental agencies use soundex,\n"
"#  as do genealogical researchers.\n"
"#\n"
"#  For more information,\n"
"#+ see the \"National Archives and Records Administration home page\",\n"
"#+ http://www.nara.gov/genealogy/soundex/soundex.html\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:156
#, no-wrap
msgid ""
"# Exercise:\n"
"# --------\n"
"# Simplify the \"Exception Patch\" section of this script.\n"
msgstr ""

#. type: Plain text
#: abs-guide/soundex.sh:157
#, no-wrap
msgid "exit 0\n"
msgstr ""
