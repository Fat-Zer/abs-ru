# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://github.com/Fat-Zer/abs-ru/issues\n"
"POT-Creation-Date: 2014-07-07 23:03+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: abs-guide/subshell.sh:3
#, no-wrap
msgid ""
"#!/bin/bash\n"
"# subshell.sh\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:5 abs-guide/subshell.sh:47
#, no-wrap
msgid "echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:10
#, no-wrap
msgid ""
"echo \"We are outside the subshell.\"\n"
"echo \"Subshell level OUTSIDE subshell = $BASH_SUBSHELL\"\n"
"# Bash, version 3, adds the new         $BASH_SUBSHELL variable.\n"
"echo; echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:15
#, no-wrap
msgid ""
"outer_variable=Outer\n"
"global_variable=\n"
"#  Define global variable for \"storage\" of\n"
"#+ value of subshell variable.\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:20
#, no-wrap
msgid ""
"(\n"
"echo \"We are inside the subshell.\"\n"
"echo \"Subshell level INSIDE subshell = $BASH_SUBSHELL\"\n"
"inner_variable=Inner\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:23
#, no-wrap
msgid ""
"echo \"From inside subshell, \\\"inner_variable\\\" = $inner_variable\"\n"
"echo \"From inside subshell, \\\"outer\\\" = $outer_variable\"\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:27
#, no-wrap
msgid ""
"global_variable=\"$inner_variable\"   #  Will this allow \"exporting\"\n"
"                                    #+ a subshell variable?\n"
")\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:32
#, no-wrap
msgid ""
"echo; echo\n"
"echo \"We are outside the subshell.\"\n"
"echo \"Subshell level OUTSIDE subshell = $BASH_SUBSHELL\"\n"
"echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:39
#, no-wrap
msgid ""
"if [ -z \"$inner_variable\" ]\n"
"then\n"
"  echo \"inner_variable undefined in main body of shell\"\n"
"else\n"
"  echo \"inner_variable defined in main body of shell\"\n"
"fi\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:45
#, no-wrap
msgid ""
"echo \"From main body of shell, \\\"inner_variable\\\" = $inner_variable\"\n"
"#  $inner_variable will show as blank (uninitialized)\n"
"#+ because variables defined in a subshell are \"local variables\".\n"
"#  Is there a remedy for this?\n"
"echo \"global_variable = \"$global_variable\"\"  # Why doesn't this work?\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:49
#, no-wrap
msgid "# =======================================================================\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:51
#, no-wrap
msgid "# Additionally ...\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:53
#, no-wrap
msgid "echo \"-----------------\"; echo\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:55
#, no-wrap
msgid "var=41                                                 # Global variable.\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:57
#, no-wrap
msgid "( let \"var+=1\"; echo \"\\$var INSIDE subshell = $var\" )  # 42\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:61
#, no-wrap
msgid ""
"echo \"\\$var OUTSIDE subshell = $var\"                   # 41\n"
"#  Variable operations inside a subshell, even to a GLOBAL variable\n"
"#+ do not affect the value of the variable outside the subshell!\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:64
#, no-wrap
msgid "exit 0\n"
msgstr ""

#. type: Plain text
#: abs-guide/subshell.sh:69
#, no-wrap
msgid ""
"#  Question:\n"
"#  --------\n"
"#  Once having exited a subshell,\n"
"#+ is there any way to reenter that very same subshell\n"
"#+ to modify or access the subshell variables?\n"
msgstr ""
